name: CI
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Format
        run: cargo fmt --all --verbose -- --check

      - name: Lint
        run: cargo clippy --workspace --all-features --verbose -- -D warnings

      - name: Test
        run: cargo test --workspace --all-features --verbose

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dependencies
        run: sudo apt update && sudo apt -y install musl-tools

      - name: Rust Toolchain
        id: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/android/sdk/ndk
          key: ${{ runner.os }}-ndk-cache-21.3.6528147

      - name: Binary Cache
        id: bin-cache
        uses: actions/cache@v2
        with:
          path: |
            /usr/share/rust/.cargo/bin
          key: ${{ runner.os }}-bin-cache-${{ steps.rust-toolchain.outputs.rustc_hash }}

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Android NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: yes | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.3.6528147"

      - name: Cargo Tools
        if: steps.bin-cache.outputs.cache-hit != 'true'
        run: |
          cargo install cargo-license cargo-deb cargo-rpm
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build Tools
        run: |
          curl -L -o ~/.bundletool-all.jar https://github.com/google/bundletool/releases/download/1.4.0/bundletool-all-1.4.0.jar
          curl -L https://github.com/tdewolff/minify/releases/download/v2.8.0/minify_linux_amd64.tar.gz | tar -xz minify && sudo mv minify /usr/local/bin/minify-v2.8.0

      - name: Make
        env:
          NDK_BIN_PATH: /usr/local/lib/android/sdk/ndk/21.3.6528147
        run: |
          make update &
          DEBUG_SIGN=y make android & make web api deb rpm && fg || true
