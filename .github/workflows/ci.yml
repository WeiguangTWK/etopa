name: CI
on: push

jobs:
  rust-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  rust-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [etopa, etopai, etopaw, etopan]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: WebAssembly target
        if: ${{ matrix.project == 'etopaw' }}
        run: /usr/share/rust/.cargo/bin/rustup target add --toolchain stable wasm32-unknown-unknown

      - name: Android target
        if: ${{ matrix.project == 'etopan' }}
        run: /usr/share/rust/.cargo/bin/rustup target add --toolchain stable aarch64-linux-android

      - name: Build
        if: ${{ matrix.project == 'etopa' || matrix.project == 'etopai' }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p ${{ matrix.project }}

      - name: Test
        if: ${{ matrix.project == 'etopa' || matrix.project == 'etopai' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p ${{ matrix.project }}

      - name: Install wasm-pack
        if: ${{ matrix.project == 'etopaw' }}
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Build WebAssembly
        if: ${{ matrix.project == 'etopaw' }}
        run: wasm-pack build -t web ${{ matrix.project }}

      - name: Build Android
        if: ${{ matrix.project == 'etopan' }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p ${{ matrix.project }} --target aarch64-linux-android

      - name: Test Android
        if: ${{ matrix.project == 'etopan' }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -p ${{ matrix.project }} --target aarch64-linux-android

  android-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: cd etopan-app && ./gradlew :app:bundleRelease

  make-build:
    runs-on: ubuntu:latest
    name: Make Build
    steps:
      - name: Make with rwa-builder
        id: rwa-build
        uses: actions/rwa-builder@0.0.2
        with:
          git-repo: 'https://ltheinrich.de/etopa'
      - name: Print exit code
        run: echo "Exit code ${{ steps.rwa-build.outputs.exitcode }}"
