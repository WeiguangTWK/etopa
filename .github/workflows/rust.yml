name: CI
on: [push, pull_request]

jobs:
  rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - etopa
          - etopai
          - etopan
          - etopaw

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Linux target
        if: ${{ matrix.project == "etopa" || matrix.project == "etopai" }}
        run: /usr/share/rust/.cargo/bin/rustup target add --toolchain stable x86_64-unknown-linux-musl

      - name: WebAssembly target
        if: ${{ matrix.project == "etopaw" }}
        run: /usr/share/rust/.cargo/bin/rustup target add --toolchain wasm32-unknown-unknown

      - name: Android target
        if: ${{ matrix.project == "etopan" }}
        run: /usr/share/rust/.cargo/bin/rustup target add --toolchain stable aarch64-linux-android

      - name: Build Linux
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p ${{ matrix.project }} --target x86_64-unknown-linux-musl

      - name: Test Linux
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -p ${{ matrix.project }} --target x86_64-unknown-linux-musl

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: ${{ matrix.project == "etopaw" }}
        with:
          version: 'latest'

      - name: Build WebAssembly
        if: ${{ matrix.project == "etopaw" }}
        run: wasm-pack build -t web etopaw

      - name: Build Android
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p ${{ matrix.project }} --target aarch64-linux-android

      - name: Test Android
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -p ${{ matrix.project }} --target aarch64-linux-android

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -p ${{ matrix.project }} --all -- --check

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p ${{ matrix.project }} -- -D warnings

  kotlin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: cd etopan-app && ./gradlew :app:bundleRelease
