#!/bin/bash

set -e
source ~/.profile

distro=`lsb_release -is`
mkdir -p /tmp/etopa-configure

bold=$(TERM=xterm-256color tput bold)
italic=$(TERM=xterm-256color tput sitm)
underline=$(TERM=xterm-256color tput smul)
normal=$(TERM=xterm-256color tput sgr0)

if [ $distro == "Fedora" ] || [ $distro == "CentOS" ]; then
  sudo dnf -y groupinstall "Development Tools"
  sudo dnf -y install python java-latest-openjdk-devel gcc-aarch64-linux-gnu gcc-arm-linux-gnu musl-gcc curl git openssl-devel pkg-config
elif [ $distro == "Debian" ] || [ $distro == "Ubuntu" ]; then
  sudo apt update
  sudo apt -y install build-essential python default-jdk gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf musl-tools curl git libssl-dev pkg-config
else
  echo "${underline}Unsupported distribution, assuming packages already installed:${normal}"
  echo "${bold}Fedora:${normal}"
  echo "  ${italic}sudo dnf groupinstall \"Development Tools\""
  echo "  sudo dnf install python java-latest-openjdk-devel gcc-aarch64-linux-gnu gcc-arm-linux-gnu musl-gcc curl git openssl-devel pkg-config${normal}"
  echo "${bold}Debian:${normal}"
  echo -e "  ${italic}sudo apt install build-essential python default-jdk gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf musl-tools curl git libssl-dev pkg-config${normal}\n"
fi

which rustup > /dev/null 2>&1
if ! [ $? -eq 0 ]; then
  curl --proto '=https' --tlsv1.2 -sSf -o /tmp/etopa-configure/rustup.sh https://sh.rustup.rs
  chmod +x /tmp/etopa-configure/rustup.sh
  /tmp/etopa-configure/rustup.sh -y
  rm /tmp/etopa-configure/rustup.sh
fi

if ! [ "$ANDROID_NDK_ROOT" == "$HOME/.android/sdk/ndk" ]; then
  echo -e '\nexport ANDROID_NDK_ROOT="$HOME/.android/sdk/ndk"' >> $HOME/.profile
fi

if ! [ "$ANDROID_SDK_ROOT" == "$HOME/.android/sdk" ]; then
  echo -e '\nexport ANDROID_SDK_ROOT="$HOME/.android/sdk"' >> $HOME/.profile
fi

source $HOME/.profile

targets=`rustup target list`

if ! [[ $targets == *"x86_64-unknown-linux-musl (installed)"* ]]; then
  rustup target add x86_64-unknown-linux-musl
fi

if ! [[ $targets == *"aarch64-linux-android (installed)"* ]]; then
  rustup target add aarch64-linux-android
fi

if ! [[ $targets == *"armv7-linux-androideabi (installed)"* ]]; then
  rustup target add armv7-linux-androideabi
fi

if ! [[ $targets == *"x86_64-linux-android (installed)"* ]]; then
  rustup target add x86_64-linux-android
fi

if ! [[ $targets == *"i686-linux-android (installed)"* ]]; then
  rustup target add i686-linux-android
fi

if ! [[ $targets == *"wasm32-unknown-unknown (installed)"* ]]; then
  rustup target add wasm32-unknown-unknown
fi

cargo install cargo-license cargo-edit
cargo install wasm-pack
if ! [ $? -eq 0 ]; then
  rm $HOME/.cargo/bin/wasm-pack
  cargo install wasm-pack
fi

if ! [ -f "$HOME/.android/sdk/cmdline-tools/latest/bin/sdkmanager" ]; then
  mkdir -p $HOME/.android/sdk/cmdline-tools
  curl -o /tmp/etopa-configure/android-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
  unzip /tmp/etopa-configure/android-tools.zip -d /tmp/etopa-configure
  mv /tmp/etopa-configure/cmdline-tools $HOME/.android/sdk/cmdline-tools/latest
  rm /tmp/etopa-configure/android-tools.zip
fi

SDK_MANAGER=$HOME/.android/sdk/cmdline-tools/latest/bin/sdkmanager
if [[ ! -z "${ANDROID_SDK_MANAGER}" ]] && [[ "${ANDROID_SDK_MANAGER}" == */sdkmanager ]]; then
  SDK_MANAGER="${ANDROID_SDK_MANAGER}"
fi
yes | $SDK_MANAGER --licenses
yes | $SDK_MANAGER "build-tools;30.0.3" "platforms;android-30" "ndk;22.1.7171670"

mkdir -p $HOME/.android
if ! [ -f "$HOME/.android/debug.keystore" ]; then
  keytool -genkey -v -keystore $HOME/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
else
  echo android | keytool -list -keystore $HOME/.android/debug.keystore > /dev/null 2>&1
  if ! [ $? -eq 0 ]; then
    keytool -genkey -v -keystore $HOME/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
  fi
fi

if ! [ -f "$HOME/.bundletool-1.5.0.jar" ]; then
  curl -L -o $HOME/.bundletool-1.5.0.jar https://github.com/google/bundletool/releases/download/1.5.0/bundletool-all-1.5.0.jar
fi

if ! [ -f "/usr/local/bin/minify-v2.8.0" ]; then
  (cd /tmp/etopa-configure/ && curl -L https://github.com/tdewolff/minify/releases/download/v2.8.0/minify_linux_amd64.tar.gz | tar -xz minify && sudo mv minify /usr/local/bin/minify-v2.8.0)
fi

rm -rf /tmp/etopa-configure
echo -e "Successfully configured\n"
echo "${bold}${underline}Please execute the following command to complete the configuration:"
echo "${normal}${bold}source $HOME/.profile${normal}"
